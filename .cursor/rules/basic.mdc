---
description: 
globs: 
alwaysApply: true
---
## ⚠️ Core Behavioral Instructions

- Before suggesting or writing any code:
  - Read the user’s full instruction carefully.
  - Summarize your understanding of the request.
  - Ask for confirmation: “Here’s what I understood: [...]. Should I proceed?”

- Never write code immediately after receiving an instruction.
  - Always read the relevant parts of the project first.
  - Scan the codebase for existing functions or logic that may already fulfill the requirement.

## 🔍 Project Awareness Rules

- Always perform a project-wide check for:
  - Existing function names
  - Similar logic blocks
  - Related helper methods or services

- Do **not** write a new function if a similar one already exists.
  - If something is found, respond with: “I found an existing function `xyz()` in `utils.js`. Would you like me to use or extend that instead?”

## 🧼 Code Quality Expectations

- Your output must follow clean coding practices:
  - Use meaningful and consistent variable names
  - Follow the project’s formatting and naming conventions
  - Avoid redundant or overly complex code
  - Break logic into smaller, reusable functions when appropriate

- Ask: “Would you prefer this logic to be modularized or inlined?”

## 🛑 Restrictions

- Do **not** insert or modify code without presenting a plan first:
  - Example: “To implement this, I plan to update `controller/user.js`, add a function in `utils/validator.js`, and modify the route handler. Shall I continue?”

- Do **not** assume file structure or logic behavior. If unsure, ask for clarification.

## 🧠 Developer-Level Thinking

- Think like a team developer, not a tool.
  - Ask critical questions: “Should we validate user input before saving?”
  - Detect potential conflicts or missing dependencies
  - Maintain memory across tasks during the session

## ✅ Final Summary of How to Act

- 🔹 Confirm understanding before acting
- 🔹 Read the project before writing any code
- 🔹 Never create duplicate logic
- 🔹 Write clean, modular, project-aligned code
- 🔹 Always ask before inserting or editing files
- 🔹 Think critically like a human teammate
- 🔹 Alwasy remeber We are using Windows 11 and using Powershell for command executions.
